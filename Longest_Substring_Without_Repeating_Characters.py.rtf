{\rtf1\ansi\ansicpg936\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 class Solution(object):\
    def lengthOfLongestSubstring(self, s):\
        """\
        :type s: str\
        :rtype: int\
        """\
        hash = \{\}\
        max_len = 0\
        current_len = 0\
        \
        if s == "":\
            return 0\
        for i in range(len(s)):\
            x = s[i]\
            if x in hash:\
                m = hash[x]\
                for j in range((i-current_len),(hash[x]+1)):\
                    hash.pop(s[j])\
                current_len = i-m-1\
            current_len += 1\
            if current_len > max_len:\
                max_len = current_len\
            if i == len(s)-1:\
                return max_len\
            hash[x] = i}